Javascript ES6
-----------------
create an object from the form input

object to string conversion	JSON.stringify()
string to object conversion	JSON.parse()


{"id":"123","firstName":"Raja ram", "lastName":"Mohan roy"}			json string literal

ES6 features
HTML5 features
	geo location
	web storage


ES6 features
	arrow function
		in java 8, do you remember "lambda"?
			yes. we use lambda for providing easy implementation of "Functional Interface".

		same, case in javascript es6 also.

how did we bind an event to an event handler


-> this is lambda in java
=> this is arrow function in javascript

1) Arrow function
	<body>
    <input type="file" name="" id="f1"><br>
    <input type="button" value="Click me" id="btn1">
    <script>
        document.getElementById('f1').addEventListener("change",(x)=>{   alert("the file is selected");
        // console.log(x.target.files[0]);
        console.log(x);
        console.log(x.target.files[0].name);
    });
        // document.getElementById("btn1").addEventListener("click",(a)=>
        // {  alert('you clicked the button');
        //     console.log(a);
        // });
        // document.getElementById("btn1").addEventListener("click",function(){   alert('Yes this is anonymous function')  });
    </script>
</body>

2) Object destructuring

	 {"id":"123","firstName":"Raja ram", "lastName":"Mohan roy"}
	
	sometimes, we need to split this object into multiple variables
tuple
	is also called as record



var jsondata = {
    title: 'Top 5 JavaScript ES6 Features',
    Details: {
        date: {
            created: '2017/09/19',
            modified: '2017/09/20',
        },
        Category: 'JavaScript',
    },
    url: '/top-5-es6-features/'
};

the above json can be destructured as 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        var jsondata = {
    title: 'Top 5 JavaScript ES6 Features',
    Details: {
        date: {
            created: '2017/09/19',
            modified: '2017/09/20',
        },
        Category: 'JavaScript',
    },
    url: '/top-5-es6-features/'
};
    var {title,Details:{date:{created,modified},Category},url}=jsondata;
    console.log(title);
    console.log(url);
    console.log(modified)
    console.log(Category);
    console.log(created);

    </script>
</body>
</html>


	


Task:
-------
1) create a form that captures the following information about an employee

Id: _____________________
Name: _______________________
Email: ____________________________

on clicking the Button, the above info should be captured as an employee object (declare the object globally)

2) the click event must be handled using "arrow" function

3) another button click to 
	destructure the object into 3 variables
	display those 3 variables in console.

------------------------------
3) Destructuring an array

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        var arr=[1,2,3,4,5,6,7];
        var [,x,,y,,z]=arr;
        console.log(x);
        console.log(y);
        console.log(z);
    </script>
</body>
</html>

-------------------------
4) Default & Rest parameters

	what is default parameter?
		a parameter that has a default value



        function fn1()
        {
            var a=20;
            var b=30;
            var result=addNumbers();        //a & b are actual paramters. Because, a and b are defined while calling the function
            alert(result);
        }

        function addNumbers(x,y)    //x & y are undefined
        {            
            return x+y;		//undefined+undefined = NaN
        }


Rest Parameter
----------------------
	have you heard about "Param array"?
	
	have you heard about array as parameter?

	public void display(int []arr)			//array as argument
	{
	}

	display(x);		//x is an array
	but,	can we call like

		display(2,3,4,5,6,666,7);			//no, because, the arg is an array NOT A PARAM ARRAY


	But array as argument, is different from "Param array"
	param array allows us to accept any number of arguments

	
Param Array is called as Rest parameter in Javascript ES6 and also in 

1) only 1 rest parameter is allowed for a function
2) rest parameter must be the last parameter in the function
3) rest parameter must be single dimension

...		elipsis

a rest parameter is defined using ...

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script>
        function display(x, ...y)
        {
            console.log("display method is called now.")
            console.log(x);
            console.log(y);
        }
        display(10,20,30,40,50);
    </script>
</head>
<body>
    
</body>
</html>

we can call the display method as follows also:
var arr=[101,102,103,104];
        display(1,arr);	//here the REST param accepts an array name also



HTML5 web storage:
---------------------------
Storage vs Memory

memory is volatile
storage is persistent/ permanent
	even if it is not permanent, it may persist across sessions or within a session

i am storing some value in a variable, it is volatile

i have typed a lot of information in a form, but i closed the browser and opened again, nothing is found there. i have to type again.

how to store information permanently in javascript code?

	localStorage		permanent
	SessionStorage		until logged out 	(all browsers closed)


localStorage
	setItem
	removeItem



Demo:
	my webpage should remember me in this computer (in this browser)



TasK:
----------

1) create index.html
2) use bootstrap to create 
	navbar			right side of the navbar, 		Sign Up | Login 
	jumbotron
		h1	text-center		Project Tile here
	row
		col-md-4
		col-md-4
		col-md-4
		
3) When we click "Login", the login page must be displayed
	hyper link to "login.html"

4) login.html
	User name:
	Password:
	Remember me

	if remember me is checked, then
	the user credentials must be remembered in that computer (in that specific browser)

5) if sign up menu is clicked, it should show 
	signup.html

 




Difference between
	var    &    let




